// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TvcDay09LabCF.Models;

#nullable disable

namespace TvcDay09LabCF.Migrations
{
    [DbContext(typeof(TvcDay09LabCFContext))]
    partial class TvcDay09LabCFContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.21")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TvcDay09LabCF.Models.TvcLoai_San_Pham", b =>
                {
                    b.Property<long>("tvcId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("tvcId"));

                    b.Property<string>("tvcMaLoai")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("tvcTenLoai")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("tvcTrangThai")
                        .HasColumnType("bit");

                    b.HasKey("tvcId");

                    b.HasIndex("tvcMaLoai")
                        .IsUnique();

                    b.ToTable("TvcLoai_San_Pham");
                });

            modelBuilder.Entity("TvcDay09LabCF.Models.TvcSan_Pham", b =>
                {
                    b.Property<long>("tvcId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("tvcId"));

                    b.Property<decimal>("tvcDonGia")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("tvcHinhAnh")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("tvcLoaiSanPhamId")
                        .HasColumnType("bigint");

                    b.Property<long>("tvcLoai_San_PhamtvcId")
                        .HasColumnType("bigint");

                    b.Property<string>("tvcMaSanPham")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("tvcSoLuong")
                        .HasColumnType("int");

                    b.Property<string>("tvcTenSanPham")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("tvcId");

                    b.HasIndex("tvcLoai_San_PhamtvcId");

                    b.ToTable("TvcSan_Pham");
                });

            modelBuilder.Entity("TvcDay09LabCF.Models.TvcSan_Pham", b =>
                {
                    b.HasOne("TvcDay09LabCF.Models.TvcLoai_San_Pham", "tvcLoai_San_Pham")
                        .WithMany("tvcSan_Phams")
                        .HasForeignKey("tvcLoai_San_PhamtvcId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("tvcLoai_San_Pham");
                });

            modelBuilder.Entity("TvcDay09LabCF.Models.TvcLoai_San_Pham", b =>
                {
                    b.Navigation("tvcSan_Phams");
                });
#pragma warning restore 612, 618
        }
    }
}
